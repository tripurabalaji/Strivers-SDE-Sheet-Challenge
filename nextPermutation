class Solution {
    public void nextPermutation(int[] nums) {
        if(nums==null || nums.length<=1) return;
        
        //find the breakin point where nums[i]  < nums[i+1]
        int n =  nums.length;
        int index = -1;
        for(int i = n-2; i>=0; i--){
            if(nums[i]< nums[i+1]){
                index = i;
                break;
            }
        }
        if(index == -1){
            //Arrays.sort(nums);
            reverse(nums, 0, n-1);
            return;
        }
        //find the smallest number that is greater than nums[index]
        for(int i = n-1; i>index; i--){
            if(nums[i]>nums[index]){
                swap(nums, i, index);
                break;
            }
        }
        
		reverse(nums, index+1, nums.length-1);
		
	}
	public static void swap(int [] A, int i, int j)
	{
		int temp = A[i] ;
		A[i] = A[j];
		A[j]  = temp;
	}
	
	public static void reverse(int [] A, int i, int j)
	{
		while(i<j)
		{
			swap(A, i++, j--);
		}
	}
    
}
